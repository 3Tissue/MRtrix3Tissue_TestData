#!/bin/bash

LOGFILE=testing.log
echo logging to \""$LOGFILE"\" 

mrtrix3_folder=$(dirname $(readlink -f build))
echo MRtrix3 location: $mrtrix3_folder
cat > $LOGFILE <<EOD
-------------------------------------------
  Testing MRtrix3 installation
-------------------------------------------

  testing folder: $(pwd)
  MRtrix3 folder: ${mrtrix3_folder}
EOD

echo -n "building testing commands... "
cat >> $LOGFILE <<EOD

-------------------------------------------

## building test commands... 

EOD
./build >> $LOGFILE 2>&1
if [ $? != 0 ]; then 
  echo ERROR!
  exit 1
else
  echo OK
fi

if [ $# == 0 ]; then
  for n in tests/*; do
    tests="$tests $(basename $n)"
  done
else
  tests="$@"
fi

a_script_has_failed=false

echo PATH is set to $PATH >> $LOGFILE

for script in $tests; do

  cat >> $LOGFILE <<EOD
-------------------------------------------

## running "${script}"...

EOD

  echo -n 'running "'${script}'"... '
  rm -f data/tmp*
  ((ntests=0))
  ((success=0))
  while IFS='' read -r cmd || [[ -n "$cmd" ]]; do
    echo -n '# command: '$cmd >> $LOGFILE 
    (
      export PATH="$(pwd)/bin:${mrtrix3_folder}/bin:$PATH"; 
      cd data/
      eval $cmd
      ) > .__tmp.log 2>&1 

      if [[ $? -ne 0 ]]; then 
        echo " [ ERROR ]" >> $LOGFILE
      else 
        echo " [ ok ]" >> $LOGFILE
        ((success++)); 
      fi
    cat .__tmp.log >> $LOGFILE
    echo "" >> $LOGFILE
    ((ntests++))
  done < tests/$script

  echo -n $success of $ntests passed
  if [[ $success -lt $ntests ]]; then
    echo "    <-------- ERROR"
    a_script_has_failed=true 
    cat >> $LOGFILE <<EOD

## ERROR: $(($ntests-$success)) tests failed for "${script}"

EOD
  else
    echo ""
    cat >> $LOGFILE <<EOD
## $ntests tests completed OK for "${script}"

EOD
  fi

done

if [ ${a_script_has_failed} = true ]; 
then
  exit 1
fi


